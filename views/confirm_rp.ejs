<!DOCTYPE html>
<html lang="tr">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Şifre Sıfırlama - eduyemek</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" href="/ituyemek_logo.png" type="image/png">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            'neon-blue': '#00f6ff',
            'neon-yellow': '#ffeb3b',
            'primary': '#667eea',
            'primary-dark': '#5a67d8',
            'secondary': '#764ba2',
          },
          animation: {
            'float': 'float 6s ease-in-out infinite',
            'glow': 'glow 2s ease-in-out infinite alternate',
            'slide-up': 'slideUp 0.8s ease-out',
          },
          fontFamily: {
            sans: ['system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Open Sans', 'Helvetica Neue', 'sans-serif'],
          },
        },
      },
    };
  </script>
  <style>
    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-15px); }
    }

    @keyframes glow {
      from { box-shadow: 0 0 10px rgba(102, 126, 234, 0.5); }
      to { box-shadow: 0 0 20px rgba(102, 126, 234, 0.7); }
    }

    @keyframes slideUp {
      from { opacity: 0; transform: translateY(30px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .gradient-bg {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      position: relative;
      overflow: hidden;
    }

    .floating-shapes {
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    .shape {
      position: absolute;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      animation: float 8s ease-in-out infinite;
    }

    .shape:nth-child(1) {
      width: 80px;
      height: 80px;
      top: 20%;
      left: 10%;
      animation-delay: 0s;
    }

    .shape:nth-child(2) {
      width: 120px;
      height: 120px;
      top: 60%;
      right: 10%;
      animation-delay: 2s;
    }

    .shape:nth-child(3) {
      width: 60px;
      height: 60px;
      top: 80%;
      left: 20%;
      animation-delay: 4s;
    }

    .glass-effect {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 10;
      animation: slideUp 0.6s ease-out forwards;
    }

    .welcome-text {
      animation: slideUp 0.6s ease-out 0.2s forwards;
    }

    .input-glow:focus {
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);
      border-color: #667eea;
    }

    .btn-primary {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      transition: all 0.3s ease;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
    }

    .notification {
      position: fixed;
      top: 16px;
      right: 16px;
      padding: 12px 20px;
      border-radius: 8px;
      color: white;
      font-weight: 500;
      transform: translateX(100%);
      transition: transform 0.3s ease;
      z-index: 1000;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .notification.show {
      transform: translateX(0);
    }

    .notification.success {
      background: #10b981;
    }

    .notification.error {
      background: #ef4444;
    }

    @media (max-width: 640px) {
      .form-container {
        padding: 1.5rem;
        overflow-y: auto;
        max-height: 80vh;
      }

      .shape {
        display: none;
      }
    }
  </style>
</head>

<body class="gradient-bg min-h-screen flex flex-col font-sans text-gray-900">
  <div class="floating-shapes hidden sm:block">
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
  </div>

  <header class="bg-white/95 backdrop-blur-md shadow-md fixed w-[calc(100%+15px)] top-0 z-50 -left-[15px]">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 py-4">
      <div class="flex justify-between items-center">
        <a href="/"
          class="text-2xl font-bold text-gray-800 hover:text-primary transition-colors duration-300">
          <i class="fas fa-utensils mr-2 text-orange-500"></i>eduyemek
        </a>
        <div class="hidden sm:flex items-center space-x-3">
          <a href="/account/login"
            class="px-4 py-2 text-gray-700 hover:text-primary transition-colors duration-300 font-medium">Giriş
            Yap</a>
          <a href="/account/register"
            class="btn-primary text-white px-4 py-2 rounded-lg font-medium hover:scale-105">Kayıt Ol</a>
        </div>
        <button class="sm:hidden text-gray-700" onclick="toggleMobileMenu()">
          <i class="fas fa-bars text-xl"></i>
        </button>
      </div>
      <div id="mobileMenu" class="sm:hidden hidden mt-4 pb-4 border-t border-gray-200">
        <div class="flex flex-col space-y-3 pt-4">
          <a href="/account/login" class="text-gray-700 hover:text-primary transition-colors">Giriş Yap</a>
          <a href="/account/register" class="text-gray-700 hover:text-primary transition-colors">Kayıt Ol</a>
        </div>
      </div>
    </div>
  </header>

  <main class="flex-grow flex items-center justify-center p-4 sm:p-6">
    <div class="form-container glass-effect p-6 sm:p-8 rounded-xl w-full max-w-md">
      <div class="text-center mb-6 welcome-text">
        <h2 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-2">Şifrenizi Sıfırlayın</h2>
        <p class="text-gray-600 text-sm sm:text-base">Yeni şifrenizi girin</p>
      </div>
      <form id="confirmResetForm" class="space-y-5">
        <input type="hidden" id="token" name="token" value="<%= token %>" />
        <div class="relative">
          <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">Yeni Şifre</label>
          <input type="password" id="newPassword" name="newPassword" placeholder="Yeni şifrenizi girin" required
            class="w-full p-3 rounded-lg border border-gray-200 bg-white/80 focus:outline-none input-glow transition-all text-gray-800 placeholder-gray-500 pr-10" />
        </div>
        <div class="relative">
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Şifreyi Doğrulayın</label>
          <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Şifrenizi doğrulayın" required
            class="w-full p-3 rounded-lg border border-gray-200 bg-white/80 focus:outline-none input-glow transition-all text-gray-800 placeholder-gray-500 pr-10" />
        </div>
        <div id="error" class="text-red-600 text-sm bg-red-100 border border-red-200 rounded-lg p-3 hidden flex items-center space-x-2"></div>
        <button type="submit" id="resetConfirmBtn"
          class="w-full btn-primary text-white font-medium py-3 rounded-lg flex items-center justify-center hover:scale-105">
          <span id="resetConfirmBtnText">Şifreyi Sıfırla</span>
        </button>
        <div class="text-center">
          <p class="text-gray-600 text-sm">
            Geri dönmek mi istiyorsunuz? <a href="/account/login" class="text-primary hover:text-primary-dark font-medium">Giriş Yap</a>
          </p>
        </div>
      </form>
    </div>
  </main>
  <footer>
    <div class="max-w-7xl mx-auto px-6 text-center text-white/80 text-sm">
      © 2025 eduyemek. Tüm hakları saklıdır.
    </div>
  </footer>

  <script>
    function toggleMobileMenu() {
      const mobileMenu = document.getElementById('mobileMenu');
      mobileMenu.classList.toggle('hidden');
    }

    function showNotification(message, type = 'success') {
      const existingNotification = document.querySelector('.notification');
      if (existingNotification) existingNotification.remove();
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.textContent = message;
      document.body.appendChild(notification);
      setTimeout(() => notification.classList.add('show'), 100);
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => notification.remove(), 300);
      }, 3000);
    }

    document.getElementById('confirmResetForm').addEventListener('submit', async function (event) {
      event.preventDefault();
      const token = document.getElementById('token').value;
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const errorDiv = document.getElementById('error');

      if (!newPassword || !confirmPassword) {
        errorDiv.textContent = 'Lütfen tüm alanları doldurun.';
        errorDiv.classList.remove('hidden');
        return;
      }

      if (newPassword !== confirmPassword) {
        errorDiv.textContent = 'Şifreler eşleşmiyor.';
        errorDiv.classList.remove('hidden');
        return;
      }

      if (newPassword.length < 6) {
        errorDiv.textContent = 'Şifre en az 6 karakter olmalı.';
        errorDiv.classList.remove('hidden');
        return;
      }

      try {
        const response = await fetch('/account/reset-password/confirm', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ token, newPassword }),
        });
        const data = await response.json();
        if (response.ok) {
          showNotification(data.message, 'success');
          setTimeout(() => {
            window.location.href = data.redirect || '/account/login';
          }, 2000);
        } else {
          errorDiv.textContent = data.error || 'Bir hata oluştu.';
          errorDiv.classList.remove('hidden');
        }
      } catch (error) {
        errorDiv.textContent = 'Bağlantı hatası! Lütfen tekrar deneyin.';
        errorDiv.classList.remove('hidden');
      }
    });

    window.addEventListener('scroll', () => {
      const header = document.querySelector('header');
      header.classList.toggle('bg-white/98', window.scrollY > 100);
      header.classList.toggle('bg-white/95', window.scrollY <= 100);
    });

    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
          const mobileMenu = document.getElementById('mobileMenu');
          if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
          }
        }
      });
    });
  </script>
</body>

</html>