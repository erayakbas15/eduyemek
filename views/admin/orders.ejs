<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>İTÜYEMEK - Sipariş Yönetimi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="/ituyemek_logo.png" type="image/png">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        /* Sidebar için özel geçiş efekti */
        .sidebar-link {
            transition: all 0.2s ease-in-out;
        }

        .sidebar-link:hover {
            transform: translateX(5px);
        }

        /* Responsive table text wrapping for small screens */
        @media (max-width: 640px) {

            td,
            th {
                white-space: normal !important;
            }
        }

        /* Adjust sidebar padding and width for small screens */
        @media (max-width: 640px) {
            .sidebar {
                width: 100%;
                padding: 1rem;
            }
        }

        /* Ensure sidebar is fully visible when open */
        .sidebar.open {
            transform: translateX(0);
        }
    </style>
</head>

<body class="bg-gradient-to-br from-gray-100 to-gray-200 font-sans antialiased">
    <div class="flex min-h-screen">
        <!-- Hamburger Menu Button (Visible on Mobile) -->
        <button id="toggleSidebar"
            class="md:hidden fixed top-4 left-4 z-10 opacity-75 p-2 bg-blue-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            aria-label="Menüyü Aç/Kapat">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16">
                </path>
            </svg>
        </button>

        <!-- Overlay for Mobile Sidebar -->
        <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden md:hidden z-30"></div>

        <!-- Sidebar -->
        <div id="sidebar"
            class="sidebar fixed top-0 left-0 w-64 h-full bg-white shadow-lg p-6 flex flex-col justify-between border-r border-gray-200 transform -translate-x-full transition-transform duration-300 z-40 md:translate-x-0 md:relative md:transform-none">
            <!-- Close Button (Visible on Mobile) -->
            <button id="closeSidebar" class="absolute top-4 right-4 text-2xl text-gray-700 focus:outline-none md:hidden"
                aria-label="Menüyü Kapat">
                ×
            </button>

            <div>
                <div class="text-center mb-10">
                    <h1 class="text-2xl sm:text-3xl font-extrabold text-blue-700 tracking-tight">İTÜYEMEK</h1>
                    <p class="text-sm text-gray-500 mt-1">Yönetim Paneli</p>
                </div>
                <nav>
                    <a href="/admin/dashboard"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6">
                            </path>
                        </svg>
                        Dashboard
                    </a>
                    <a href="/admin/users"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M17 20h-5m-11 0h11v-3a3 3 0 016 0v3h2a2 2 0 012 2V5a2 2 0 01-2-2H5a2 2 0 01-2 2v14a2 2 0 002 2z">
                            </path>
                        </svg>
                        Kullanıcılar
                    </a>
                    <a href="/admin/restaurants"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                        </svg>
                        Restoranlar
                    </a>
                    <a href="/admin/meals"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M19.428 15.428a2 2 0 00-2.856-2.856l-3.353 3.353a2 2 0 002.856 2.856l3.353-3.353zm0 0L21 21m-1-1l-3.353-3.353m-12.87 1.84a2 2 0 002.856 2.856l3.353-3.353a2 2 0 00-2.856-2.856L3 14.87z">
                            </path>
                        </svg>
                        Menü Yönetimi
                    </a>
                    <a href="/admin/orders"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-white bg-blue-600 hover:bg-blue-700 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M17 12h.01">
                            </path>
                        </svg>
                        Siparişler
                    </a>
                </nav>
            </div>

            <div class="mt-8">
                <a href="/" onclick="logout()"
                    class="flex items-center justify-center w-full py-3 px-4 rounded-lg bg-red-500 text-white hover:bg-red-600 font-medium transition duration-200 ease-in-out text-sm"
                    aria-label="Çıkış Yap">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                        </path>
                    </svg>
                    Çıkış Yap
                </a>
            </div>
        </div>

        <main class="flex-1 overflow-y-auto p-4 sm:p-8">
            <h3 class="text-2xl sm:text-3xl font-extrabold text-gray-900 mb-6 sm:mb-8">Sipariş Yönetimi</h3>
            <!-- Search Bar Section -->
            <div class="mb-6 flex flex-col sm:flex-row sm:items-center sm:space-x-3 space-y-3 sm:space-y-0">
                <select id="statusFilter"
                    class="border border-gray-300 p-2.5 rounded-lg focus:ring-blue-500 focus:border-blue-500 text-gray-700">
                    <option value="">Tüm Durumlar</option>
                    <option value="pending">Beklemede</option>
                    <option value="preparing">Hazırlanıyor</option>
                    <option value="on_the_way">Yolda</option>
                    <option value="delivered">Teslim Edildi</option>
                    <option value="cancelled">İptal Edildi</option>
                </select>
                <div class="relative flex-1">
                    <input type="text" id="searchInput" placeholder="Sipariş No, Kullanıcı Adı veya Restoran Ara..."
                        class="border border-gray-300 p-2.5 pr-10 rounded-lg w-full focus:ring-blue-500 focus:border-blue-500 text-gray-700 placeholder-gray-400">
                    <button id="clearSearch"
                        class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 hidden">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <button id="searchBtn"
                    class="bg-blue-600 hover:bg-blue-700 text-white px-5 py-2.5 rounded-lg font-medium shadow-md transition duration-200">Ara</button>
            </div>
            <div class="bg-white p-4 sm:p-7 rounded-xl shadow-md border border-gray-200">
                <table class="w-full table-auto border-collapse">
                    <thead>
                        <tr class="bg-gray-100 border-b border-gray-200">
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Sipariş No</th>
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Kullanıcı</th>
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Restoran</th>
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Tutar</th>
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Durum</th>
                            <th class="py-3 px-4 text-gray-600 font-semibold text-left">Tarih</th>
                        </tr>
                    </thead>
                    <tbody id="orderTable" class="divide-y divide-gray-100">
                        <tr>
                            <td class="py-4 text-center text-gray-500" colspan="7">Siparişler yükleniyor...</td>
                        </tr>
                    </tbody>
                </table>
                <div class="mt-6 flex justify-between items-center">
                    <button id="prevPage"
                        class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-5 py-2 rounded-lg font-medium transition duration-200"
                        disabled>Önceki</button>
                    <button id="nextPage"
                        class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-5 py-2 rounded-lg font-medium transition duration-200">Sonraki</button>
                </div>
            </div>
        </main>
    </div>

    <script>
        const API_BASE_URL = '/admin/orders';
        let currentPage = 1;

        // Debounce function to limit API calls
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Sanitize search input to remove extra spaces and problematic characters
        function sanitizeSearchInput(input) {
            return input.trim().replace(/\s+/g, ' ').replace(/[^\w\sığüşöçİĞÜŞÖÇ]/g, '');
        }

        // Fetch orders with enhanced debugging
        async function loadOrders(page = 1, status = '', search = '') {
            const tableBody = document.getElementById('orderTable');
            tableBody.innerHTML = `
    <div class="py-4 text-center text-gray-500 md:table-row">
      <div class="md:table-cell" colspan="7">
        <svg class="animate-spin inline-block w-6 h-6 mr-2" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
        </svg>
        Siparişler yükleniyor...
      </div>
    </div>
  `;

            try {
                const sanitizedSearch = sanitizeSearchInput(search);
                console.log('Sending request with:', { page, status, search: sanitizedSearch });
                const queryParams = new URLSearchParams({
                    page,
                    limit: 20,
                    ...(status && { status }),
                    ...(sanitizedSearch && { search: sanitizedSearch })
                }).toString();

                const response = await fetch(`${API_BASE_URL}?${queryParams}`, {
                    credentials: 'include',
                    headers: { 'Accept': 'application/json' }
                });

                if (response.status === 401) {
                    console.error('Unauthorized, redirecting to login');
                    window.location.href = '/account/login';
                    return;
                }

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log('API Response:', {
                    orders: data.orders.map(o => ({
                        orderNumber: o.orderNumber,
                        userName: o.user ? o.user.name : 'Bilinmiyor',
                        restaurantName: o.restaurant ? o.restaurant.name : 'Bilinmiyor'
                    })),
                    pagination: data.pagination
                });

                tableBody.innerHTML = '';

                if (data.orders && data.orders.length > 0) {
                    const statusOptions = {
                        '': 'Tüm Durumlar',
                        'pending': 'Beklemede',
                        'preparing': 'Hazırlanıyor',
                        'on_the_way': 'Yolda',
                        'delivered': 'Teslim Edildi',
                        'cancelled': 'İptal Edildi'
                    };

                    data.orders.forEach(order => {
const statusSelectHTML = `
    <span class="text-gray-700">${statusOptions[order.status] || 'Bilinmiyor'}</span>
`;

                        const row = document.createElement('tr');
                        row.className = 'hover:bg-gray-50';

                        row.innerHTML = `
            <td class="py-3 px-4 text-gray-800">#${order.orderNumber}</td>
            <td class="py-3 px-4 text-gray-800">${order.user ? order.user.name : 'Bilinmiyor'}</td>
            <td class="py-3 px-4 text-gray-800">${order.restaurant ? order.restaurant.name : 'Bilinmiyor'}</td>
            <td class="py-3 px-4 text-gray-800">${order.totalPrice.toFixed(2)}₺</td>
            <td class="py-3 px-4">${statusSelectHTML}</td>
            <td class="py-3 px-4 text-gray-800">${new Date(order.createdAt).toLocaleString('tr-TR')}</td>
            </td>
        `;

                        const mobileRow = `
            <div class="block md:hidden p-4 border-b border-gray-200 bg-white rounded-lg mb-2">
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Sipariş No:</span>
                    <span>#${order.orderNumber}</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Kullanıcı:</span>
                    <span>${order.user ? order.user.name : 'Bilinmiyor'}</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Restoran:</span>
                    <span>${order.restaurant ? order.restaurant.name : 'Bilinmiyor'}</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Tutar:</span>
                    <span>${order.totalPrice.toFixed(2)}₺</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Durum:</span>
                    <span>${statusSelectHTML}</span>
                </div>
                <div class="flex justify-between mb-2">
                    <span class="font-semibold text-gray-600">Tarih:</span>
                    <span>${new Date(order.createdAt).toLocaleString('tr-TR')}</span>
                </div>
                <div class="flex justify-end">
                    <button class="view-btn bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-lg text-sm transition duration-200">Görüntüle</button>
                </div>
            </div>
        `;

                        tableBody.innerHTML += `
            <tr class="hidden md:table-row">${row.innerHTML}</tr>
            ${mobileRow}
        `;
                    });

                    // Update pagination buttons
                    document.getElementById('prevPage').disabled = currentPage === 1;
                    document.getElementById('nextPage').disabled = data.pagination.pages <= currentPage;
                } else {
                    tableBody.innerHTML = `
        <div class="py-4 text-center text-gray-500 md:table-row">
          <div class="md:table-cell" colspan="7">
            "${sanitizedSearch ? `Arama: "${sanitizedSearch}" için s` : 'S'}ipariş bulunamadı.
          </div>
        </div>
      `;
                    document.getElementById('nextPage').disabled = true;
                }
            } catch (error) {
                console.error('Siparişleri yüklerken hata oluştu:', error);
                tableBody.innerHTML = `
      <div class="py-4 text-center text-gray-500 md:table-row">
        <div class="md:table-cell" colspan="7">Siparişler yüklenirken hata oluştu.</div>
      </div>
    `;
                document.getElementById('nextPage').disabled = true;
            }
        }

        // Sidebar toggle functionality
        const toggleBtn = document.getElementById('toggleSidebar');
        const sidebar = document.getElementById('sidebar');
        const closeBtn = document.getElementById('closeSidebar');
        const overlay = document.getElementById('overlay');

        toggleBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            sidebar.classList.toggle('open');
            overlay.classList.toggle('hidden');
        });

        closeBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            sidebar.classList.remove('open');
            overlay.classList.add('hidden');
        });

        overlay.addEventListener('click', () => {
            sidebar.classList.remove('open');
            overlay.classList.add('hidden');
        });

        document.addEventListener('click', (e) => {
            if (
                sidebar.classList.contains('open') &&
                !sidebar.contains(e.target) &&
                !toggleBtn.contains(e.target)
            ) {
                sidebar.classList.remove('open');
                overlay.classList.add('hidden');
            }
        });

        // Logout
        async function logout() {
            try {
                const response = await fetch('/account/user/usermain/logout', { method: 'POST', credentials: 'include' });
                if (response.ok) {
                    window.location.href = '/';
                } else {
                    showToast('Çıkış yapılamadı!', 'error');
                }
            } catch (error) {
                showToast('Bağlantı hatası!', 'error');
            }
        }

        // Update order status
        document.getElementById('orderTable').addEventListener('change', async (e) => {
            if (e.target.classList.contains('status-select')) {
                const id = e.target.dataset.id;
                const status = e.target.value;
                try {
                    const response = await fetch(`${API_BASE_URL}/${id}/status`, {
                        method: 'PUT',
                        credentials: 'include',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            status
                        })
                    });
                    if (!response.ok) {
                        const error = await response.json();
                        alert(error.error || 'Sipariş durumu güncellenirken hata oluştu');
                        loadOrders(currentPage, document.getElementById('statusFilter').value, document.getElementById('searchInput').value);
                    } else {
                        alert('Sipariş durumu başarıyla güncellendi!');
                    }
                } catch (err) {
                    console.error('Sipariş durumu güncelleme hatası:', err);
                    alert('Sipariş durumu güncellenirken bir hata oluştu.');
                    loadOrders(currentPage, document.getElementById('statusFilter').value, document.getElementById('searchInput').value);
                }
            }
        });

        // Search and filter with debouncing
        const debouncedSearch = debounce(() => {
            const searchInput = document.getElementById('searchInput');
            const search = searchInput.value;
            const status = document.getElementById('statusFilter').value;
            const sanitizedSearch = sanitizeSearchInput(search);
            // Trigger search for empty input, numbers, or strings >= 2 chars
            if (sanitizedSearch.length === 0 || sanitizedSearch.length >= 2 || !isNaN(sanitizedSearch)) {
                currentPage = 1;
                loadOrders(currentPage, status, sanitizedSearch);
            } else {
                console.log('Search term too short, ignoring:', sanitizedSearch);
            }
        }, 500);

        // Event listeners for search
        document.getElementById('searchBtn').addEventListener('click', debouncedSearch);

        document.getElementById('searchInput').addEventListener('input', () => {
            const clearSearchBtn = document.getElementById('clearSearch');
            const searchInput = document.getElementById('searchInput');
            clearSearchBtn.classList.toggle('hidden', !sanitizeSearchInput(searchInput.value));
            debouncedSearch();
        });

        document.getElementById('searchInput').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                debouncedSearch();
            }
        });

        document.getElementById('clearSearch').addEventListener('click', () => {
            const searchInput = document.getElementById('searchInput');
            searchInput.value = '';
            document.getElementById('clearSearch').classList.add('hidden');
            const status = document.getElementById('statusFilter').value;
            currentPage = 1;
            loadOrders(currentPage, status, '');
        });

        document.getElementById('statusFilter').addEventListener('change', debouncedSearch);

        // Pagination
        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                loadOrders(currentPage, document.getElementById('statusFilter').value, document.getElementById('searchInput').value);
            }
        });

        document.getElementById('nextPage').addEventListener('click', () => {
            currentPage++;
            loadOrders(currentPage, document.getElementById('statusFilter').value, document.getElementById('searchInput').value);
        });

        // Load data on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadOrders();
        });
    </script>
</body>

</html>