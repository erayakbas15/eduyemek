<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>İTÜYEMEK - Restoran Yönetimi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="/ituyemek_logo.png" type="image/png">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .sidebar-link {
            transition: all 0.2s ease-in-out;
        }

        .sidebar-link:hover {
            transform: translateX(5px);
        }

        .modal-overlay {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #sidebar {
            transition: transform 0.3s ease-in-out;
        }

        @media (max-width: 768px) {
            #sidebar {
                transform: translateX(-100%);
                position: fixed;
                top: 0;
                left: 0;
                height: 100%;
                z-index: 1000;
            }

            #sidebar.open {
                transform: translateX(0);
            }

            .responsive-table td {
                display: block;
                text-align: left;
                padding: 0.5rem 1rem;
            }

            .responsive-table td::before {
                content: attr(data-label);
                font-weight: bold;
                display: inline-block;
                width: 40%;
                vertical-align: top;
            }

            .responsive-table thead {
                display: none;
            }
        }
    </style>
</head>

<body class="bg-gradient-to-br from-gray-100 to-gray-200 font-sans antialiased">
    <div class="flex min-h-screen">
        <!-- Hamburger Menü Butonu (Sadece Mobilde Görünür) -->
        <button id="toggleSidebar"
            class="md:hidden fixed top-4 left-4 z-10 p-2 opacity-75 bg-blue-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            aria-label="Menüyü Aç/Kapat">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16">
                </path>
            </svg>
        </button>
        <!-- Sidebar -->
        <div id="sidebar"
            class="fixed top-0 left-0 w-64 h-full bg-white shadow-lg p-6 flex flex-col justify-between border-r border-gray-200 transform -translate-x-full transition-transform duration-300 z-40 md:translate-x-0 md:relative md:transform-none">
            <!-- Kapatma Butonu (Sadece Mobilde Görünür) -->
            <button id="closeSidebar" class="absolute top-4 right-4 text-2xl text-gray-700 focus:outline-none md:hidden"
                aria-label="Menüyü Kapat">
                ×
            </button>
            <div>
                <div class="text-center mb-10">
                    <h1 class="text-3xl font-extrabold text-blue-700 tracking-tight">İTÜYEMEK</h1>
                    <p class="text-sm text-gray-500 mt-1">Yönetim Paneli</p>
                </div>
                <nav>
                    <a href="/admin/dashboard"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6">
                            </path>
                        </svg>
                        Dashboard
                    </a>
                    <a href="/admin/users"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M17 20h-5m-11 0h11v-3a3 3 0 016 0v3h2a2 2 0 012 2V5a2 2 0 01-2-2H5a2 2 0 01-2 2v14a2 2 0 002 2z">
                            </path>
                        </svg>
                        Kullanıcılar
                    </a>
                    <a href="/admin/restaurants"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                        </svg>
                        Restoranlar
                    </a>
                    <a href="/admin/meals"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-white bg-blue-600 hover:bg-blue-700 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M19.428 15.428a2 2 0 00-2.856-2.856l-3.353 3.353a2 2 0 002.856 2.856l3.353-3.353zm0 0L21 21m-1-1l-3.353-3.353m-12.87 1.84a2 2 0 002.856 2.856l3.353-3.353a2 2 0 00-2.856-2.856L3 14.87z">
                            </path>
                        </svg>
                        Menü Yönetimi
                    </a>
                    <a href="/admin/orders"
                        class="sidebar-link flex items-center py-3 px-4 rounded-lg text-gray-700 hover:bg-gray-100 font-medium mb-2">
                        <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M17 12h.01">
                            </path>
                        </svg>
                        Siparişler
                    </a>
                </nav>
            </div>
            <div class="mt-8">
                <a href="/" onclick="logout()"
                    class="flex items-center justify-center w-full py-3 px-4 rounded-lg bg-red-500 text-white hover:bg-red-600 font-medium transition duration-200 ease-in-out text-sm"
                    aria-label="Çıkış Yap">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                        </path>
                    </svg>
                    Çıkış Yap
                </a>
            </div>
        </div>
        <!-- Main Content -->
        <div class="flex-1 p-4 sm:p-6 md:p-8">
            <h3 class="text-3xl font-extrabold text-gray-900 mb-8">Menü Yönetimi</h3>
            <div class="mb-6 flex flex-col sm:flex-row sm:items-center sm:space-x-3 space-y-3 sm:space-y-0">
                <button id="addMenuItemBtn"
                    class="bg-green-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition duration-200">Yeni
                    Menü Ekle</button>
                <select id="restaurantFilter"
                    class="border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500 text-gray-700">
                    <option value="">Restoran Seçin</option>
                </select>
                <input type="text" id="searchInput" placeholder="Yemek adı veya kategorisi ara..."
                    class="border border-gray-300 p-2 rounded-lg flex-1 text-sm focus:ring-blue-500 focus:border-blue-500 text-gray-700">
                <button id="searchBtn"
                    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition duration-200">Ara</button>
            </div>
            <div class="bg-white p-4 sm:p-6 rounded-lg shadow-md border border-gray-200 table-container">
                <table class="w-full text-left table-auto text-sm responsive-table">
                    <thead>
                        <tr class="bg-gray-100 border-b border-gray-200">
                            <th class="py-2 px-3 text-gray-600 font-semibold">Yemek Adı</th>
                            <th class="py-2 px-3 text-gray-600 font-semibold">Restoran</th>
                            <th class="py-2 px-3 text-gray-600 font-semibold">Fiyat</th>
                            <th class="py-2 px-3 text-gray-600 font-semibold">Kategori</th>
                            <th class="py-2 px-3 text-gray-600 font-semibold">Açıklama</th>
                            <th class="py-2 px-3 text-gray-600 font-semibold">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody id="mealTable" class="divide-y divide-gray-100">
                        <tr>
                            <td colspan="6" class="py-4 text-center text-gray-500" data-label="Durum">Yemekler
                                yükleniyor...</td>
                        </tr>
                    </tbody>
                </table>
                <div class="mt-6 flex flex-col sm:flex-row justify-between items-center gap-4">
                    <button id="prevPage"
                        class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed w-full sm:w-auto"
                        aria-label="Önceki Sayfa" disabled>
                        Önceki Sayfa
                    </button>
                    <span id="pageInfo" class="text-gray-700 font-medium text-base md:text-lg"></span>
                    <button id="nextPage"
                        class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed w-full sm:w-auto"
                        aria-label="Sonraki Sayfa">
                        Sonraki Sayfa
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal for Adding New Menu Item -->
    <div class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50 hidden modal-overlay"
        id="newMenuItemModal">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-xl w-full max-w-md mx-4">
            <h3 class="text-lg sm:text-xl font-bold mb-4 text-gray-800">Yeni Menü Ekle</h3>
            <form id="newMenuItemForm">
                <div class="mb-4">
                    <label for="newRestaurantId" class="block text-gray-700 text-sm font-semibold mb-1">Restoran
                        Seçin</label>
                    <select id="newRestaurantId" name="restaurantId"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required>
                        <option value="">Restoran Seçin</option>
                    </select>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="restaurantId">Restoran seçimi gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="newName" class="block text-gray-700 text-sm font-semibold mb-1">Yemek Adı</label>
                    <input type="text" id="newName" name="name"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="name">Yemek adı gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="newCategory" class="block text-gray-700 text-sm font-semibold mb-1">Kategori</label>
                    <select id="newCategory" name="category"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required>
                        <option value="">Kategori Seçin</option>
                        <option value="Ana Yemek">Ana Yemek</option>
                        <option value="Başlangıç">Başlangıç</option>
                        <option value="Tatlı">Tatlı</option>
                        <option value="İçecek">İçecek</option>
                        <option value="Salata">Salata</option>
                    </select>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="category">Kategori seçimi gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="newPrice" class="block text-gray-700 text-sm font-semibold mb-1">Fiyat</label>
                    <input type="number" id="newPrice" name="price"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required min="0" step="0.01">
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="price">Fiyat gerekli ve sayı olmalı.</p>
                </div>
                <div class="mb-4">
                    <label for="newDescription" class="block text-gray-700 text-sm font-semibold mb-1">Açıklama</label>
                    <textarea id="newDescription" name="description" rows="3"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" id="cancelNewMenuItem"
                        class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-lg text-sm font-medium transition duration-200">İptal</button>
                    <button type="submit"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition duration-200">Ekle</button>
                </div>
            </form>
        </div>
    </div>
    <!-- Modal for Editing Menu Item -->
    <div class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50 hidden modal-overlay"
        id="editMenuItemModal">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-xl w-full max-w-md mx-4">
            <h3 class="text-lg sm:text-xl font-bold mb-4 text-gray-800">Menü Düzenle</h3>
            <form id="editMenuItemForm">
                <input type="hidden" id="editMealId" name="mealId">
                <input type="hidden" id="editRestaurantId" name="restaurantId">
                <div class="mb-4">
                    <label for="editRestaurantDisplay"
                        class="block text-gray-700 text-sm font-semibold mb-1">Restoran</label>
                    <input type="text" id="editRestaurantDisplay"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm bg-gray-100" disabled>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="restaurantId">Restoran seçimi gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="editName" class="block text-gray-700 text-sm font-semibold mb-1">Yemek Adı</label>
                    <input type="text" id="editName" name="name"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="name">Yemek adı gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="editCategory" class="block text-gray-700 text-sm font-semibold mb-1">Kategori</label>
                    <select id="editCategory" name="category"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required>
                        <option value="Ana Yemek">Ana Yemek</option>
                        <option value="Başlangıç">Başlangıç</option>
                        <option value="Tatlı">Tatlı</option>
                        <option value="İçecek">İçecek</option>
                        <option value="Salata">Salata</option>
                    </select>
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="category">Kategori seçimi gerekli.</p>
                </div>
                <div class="mb-4">
                    <label for="editPrice" class="block text-gray-700 text-sm font-semibold mb-1">Fiyat</label>
                    <input type="number" id="editPrice" name="price"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"
                        required min="0" step="0.01">
                    <p class="text-red-500 text-xs mt-1 hidden" data-error="price">Fiyat gerekli ve sayı olmalı.</p>
                </div>
                <div class="mb-4">
                    <label for="editDescription" class="block text-gray-700 text-sm font-semibold mb-1">Açıklama</label>
                    <textarea id="editDescription" name="description" rows="3"
                        class="w-full border border-gray-300 p-2 rounded-lg text-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" id="cancelEditMenuItem"
                        class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-lg text-sm font-medium transition duration-200">İptal</button>
                    <button type="submit"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition duration-200">Güncelle</button>
                </div>
            </form>
        </div>
    </div>
    <script>
        const API_BASE_URL = '/admin/meals';
        let currentPage = 1;
        const itemsPerPage = 6;

        // Sidebar Functionality
        const toggleBtn = document.getElementById('toggleSidebar');
        const sidebar = document.getElementById('sidebar');
        const closeBtn = document.getElementById('closeSidebar');

        toggleBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            sidebar.classList.toggle('open');
        });

        closeBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            sidebar.classList.remove('open');
        });

        document.addEventListener('click', (e) => {
            if (sidebar.classList.contains('open') && !sidebar.contains(e.target) && !toggleBtn.contains(e.target)) {
                sidebar.classList.remove('open');
            }
        });

        sidebar.addEventListener('click', (e) => e.stopPropagation());

        // Logout
        async function logout() {
            try {
                const response = await fetch('/account/user/usermain/logout', { method: 'POST', credentials: 'include' });
                if (response.ok) {
                    window.location.href = '/';
                } else {
                    showToast('Çıkış yapılamadı!', 'error');
                }
            } catch (error) {
                showToast('Bağlantı hatası!', 'error');
            }
        }

        // Fetch Restaurants
        async function loadRestaurantsForFilter() {
            try {
                const response = await fetch('/admin/restaurants', {
                    credentials: 'include',
                    headers: { 'Accept': 'application/json' }
                });
                if (response.status === 401) {
                    window.location.href = '/account/login';
                    return;
                }
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                const data = await response.json();
                const filterSelect = document.getElementById('restaurantFilter');
                const modalSelect = document.getElementById('newRestaurantId');
                filterSelect.innerHTML = '<option value="">Tüm Restoranlar</option>';
                modalSelect.innerHTML = '<option value="">Restoran Seçin</option>';
                data.restaurants.forEach(restaurant => {
                    const option = document.createElement('option');
                    option.value = restaurant._id;
                    option.textContent = restaurant.name;
                    filterSelect.appendChild(option.cloneNode(true));
                    modalSelect.appendChild(option);
                });
            } catch (err) {
                console.error('Restoran yükleme hatası:', err);
                alert('Restoranlar yüklenirken hata oluştu');
            }
        }

        // Fetch Meals
        async function loadMeals(page = 1, restaurantId = '', search = '') {
            try {
                const queryParams = new URLSearchParams({
                    page,
                    limit: itemsPerPage, // itemsPerPage değişkenini kullanıyoruz
                    ...(restaurantId && { restaurantId }),
                    ...(search && { search })
                }).toString();
                const response = await fetch(`${API_BASE_URL}?${queryParams}`, {
                    credentials: 'include',
                    headers: { 'Accept': 'application/json' }
                });
                if (response.status === 401) {
                    window.location.href = '/account/login';
                    return;
                }
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                const data = await response.json();
                const tableBody = document.getElementById('mealTable');
                tableBody.innerHTML = '';
                if (data.meals && data.meals.length > 0) {
                    data.meals.forEach(meal => {
                        const row = document.createElement('tr');
                        row.className = 'hover:bg-gray-50';
                        row.innerHTML = `
                    <td class="py-2 px-3 text-gray-800" data-label="Yemek Adı">${meal.name}</td>
                    <td class="py-2 px-3 text-gray-800" data-label="Restoran">${meal.restaurantId ? meal.restaurantId.name : 'Bilinmiyor'}</td>
                    <td class="py-2 px-3 text-gray-800" data-label="Fiyat">${meal.price}₺</td>
                    <td class="py-2 px-3 text-gray-800" data-label="Kategori">${meal.category || '-'}</td>
                    <td class="py-2 px-3 text-gray-800" data-label="Açıklama">${meal.description || '-'}</td>
                    <td class="py-2 px-3" data-label="İşlemler">
                        <button class="edit-btn bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-md transition duration-200 mr-2" data-id="${meal._id}" aria-label="Yemeği Düzenle">
                            <svg class="w-4 h-4 inline-block align-text-bottom mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.232z"></path></svg>
                            Düzenle
                        </button>
                        <button class="delete-btn bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md transition duration-200" data-id="${meal._id}" aria-label="Yemeği Sil">
                            <svg class="w-4 h-4 inline-block align-text-bottom mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
                            Sil
                        </button>
                    </td>
                `;
                        tableBody.appendChild(row);
                    });
                } else {
                    tableBody.innerHTML = `<tr><td colspan="6" class="py-4 text-center text-gray-500" data-label="Durum">Hiç yemek bulunamadı.</td></tr>`;
                }

                // Pagination güncelleme
                const prevBtn = document.getElementById('prevPage');
                const nextBtn = document.getElementById('nextPage');
                const pageInfo = document.getElementById('pageInfo');

                if (data.pagination) {
                    currentPage = data.pagination.page;
                    const totalPages = data.pagination.pages;

                    prevBtn.disabled = currentPage <= 1;
                    nextBtn.disabled = currentPage >= totalPages;

                    pageInfo.textContent = `Sayfa ${currentPage} / ${totalPages}`;
                    prevBtn.classList.toggle('opacity-50', currentPage <= 1);
                    prevBtn.classList.toggle('cursor-not-allowed', currentPage <= 1);
                    nextBtn.classList.toggle('opacity-50', currentPage >= totalPages);
                    nextBtn.classList.toggle('cursor-not-allowed', currentPage >= totalPages);
                } else {
                    pageInfo.textContent = 'Sayfa 1 / 1';
                    prevBtn.disabled = true;
                    nextBtn.disabled = true;
                    prevBtn.classList.add('opacity-50', 'cursor-not-allowed');
                    nextBtn.classList.add('opacity-50', 'cursor-not-allowed');
                }
            } catch (err) {
                console.error('Yemek yükleme hatası:', err);
                alert('Yemekler yüklenirken hata oluştu');
                document.getElementById('mealTable').innerHTML = `<tr><td colspan="6" class="py-4 text-center text-red-500" data-label="Durum">Yemekler yüklenirken hata oluştu.</td></tr>`;
            }
        }

        // Add Menu Item Button
        document.getElementById('addMenuItemBtn').addEventListener('click', () => {
            document.getElementById('newMenuItemModal').classList.remove('hidden');
            document.getElementById('newMenuItemForm').reset();
            document.querySelectorAll('#newMenuItemForm p[data-error]').forEach(p => p.classList.add('hidden'));
        });

        // Add Meal
        document.getElementById('newMenuItemForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            document.querySelectorAll('#newMenuItemForm p[data-error]').forEach(p => p.classList.add('hidden'));
            const formData = new FormData(e.target);
            const data = {
                restaurantId: formData.get('restaurantId'),
                name: formData.get('name')?.trim(),
                category: formData.get('category'),
                price: parseFloat(formData.get('price')),
                description: formData.get('description')?.trim() || ''
            };
            let hasError = false;
            if (!data.restaurantId) {
                document.querySelector('#newMenuItemForm [data-error="restaurantId"]').classList.remove('hidden');
                hasError = true;
            }
            if (!data.name) {
                document.querySelector('#newMenuItemForm [data-error="name"]').classList.remove('hidden');
                hasError = true;
            }
            if (!data.category || data.category === '') {
                document.querySelector('#newMenuItemForm [data-error="category"]').classList.remove('hidden');
                hasError = true;
            }
            if (isNaN(data.price) || data.price < 0) {
                document.querySelector('#newMenuItemForm [data-error="price"]').classList.remove('hidden');
                hasError = true;
            }
            if (hasError) return;
            try {
                const response = await fetch(API_BASE_URL, {
                    method: 'POST',
                    credentials: 'include',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                if (response.ok) {
                    document.getElementById('newMenuItemModal').classList.add('hidden');
                    e.target.reset();
                    loadMeals(currentPage, document.getElementById('restaurantFilter').value, document.getElementById('searchInput').value);
                    alert('Yemek başarıyla eklendi!');
                } else if (response.status === 401) {
                    window.location.href = '/account/login';
                } else {
                    const error = await response.json();
                    alert(error.error || 'Yemek eklenirken hata oluştu');
                }
            } catch (err) {
                console.error('Yemek ekleme hatası:', err);
                alert('Yemek eklenirken bir hata oluştu.');
            }
        });

        // Delete Meal
        document.getElementById('mealTable').addEventListener('click', async (e) => {
            if (e.target.classList.contains('delete-btn') && confirm('Yemeği silmek istediğinize emin misiniz? Bu işlem geri alınamaz.')) {
                const id = e.target.dataset.id;
                try {
                    const response = await fetch(`${API_BASE_URL}/${id}`, {
                        method: 'DELETE',
                        credentials: 'include',
                        headers: { 'Accept': 'application/json' }
                    });
                    if (response.ok) {
                        loadMeals(currentPage, document.getElementById('restaurantFilter').value, document.getElementById('searchInput').value);
                        alert('Yemek başarıyla silindi!');
                    } else if (response.status === 401) {
                        window.location.href = '/account/login';
                    } else {
                        const error = await response.json();
                        alert(error.error || 'Yemek silinirken hata oluştu');
                    }
                } catch (err) {
                    console.error('Yemek silme hatası:', err);
                    alert('Yemek silinirken bir hata oluştu.');
                }
            }
        });

        // Edit Meal
        document.getElementById('mealTable').addEventListener('click', async (e) => {
            if (e.target.classList.contains('edit-btn')) {
                const id = e.target.dataset.id;
                try {
                    const response = await fetch(`${API_BASE_URL}/${id}`, {
                        credentials: 'include',
                        headers: { 'Accept': 'application/json' }
                    });
                    if (response.status === 401) {
                        window.location.href = '/account/login';
                        return;
                    }
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    const { meal } = await response.json();

                    // Populate edit modal
                    document.getElementById('editMealId').value = meal._id;
                    document.getElementById('editRestaurantId').value = meal.restaurantId?._id || '';
                    document.getElementById('editRestaurantDisplay').value = meal.restaurantId?.name || 'Bilinmiyor';
                    document.getElementById('editName').value = meal.name;
                    document.getElementById('editCategory').value = meal.category || 'Ana Yemek';
                    document.getElementById('editPrice').value = meal.price;
                    document.getElementById('editDescription').value = meal.description || '';

                    document.getElementById('editMenuItemModal').classList.remove('hidden');
                } catch (err) {
                    console.error('Yemek getirme hatası:', err);
                    alert('Yemek bilgileri alınırken hata oluştu');
                }
            }
        });

        // Edit Form Submission
        document.getElementById('editMenuItemForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            document.querySelectorAll('#editMenuItemForm p[data-error]').forEach(p => p.classList.add('hidden'));
            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData);
            const id = data.mealId;
            delete data.mealId;
            delete data.restaurantDisplay; // Remove display field
            let hasError = false;
            if (!data.name.trim()) {
                document.querySelector('#editMenuItemForm [data-error="name"]').classList.remove('hidden');
                hasError = true;
            }
            if (!data.category) {
                document.querySelector('#editMenuItemForm [data-error="category"]').classList.remove('hidden');
                hasError = true;
            }
            if (isNaN(parseFloat(data.price)) || parseFloat(data.price) < 0) {
                document.querySelector('#editMenuItemForm [data-error="price"]').classList.remove('hidden');
                hasError = true;
            }
            if (hasError) return;
            try {
                const response = await fetch(`${API_BASE_URL}/${id}`, {
                    method: 'PUT',
                    credentials: 'include',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                if (response.ok) {
                    document.getElementById('editMenuItemModal').classList.add('hidden');
                    e.target.reset();
                    loadMeals(currentPage, document.getElementById('restaurantFilter').value, document.getElementById('searchInput').value);
                    alert('Yemek başarıyla güncellendi!');
                } else if (response.status === 401) {
                    window.location.href = '/account/login';
                } else {
                    const error = await response.json();
                    alert(error.error || 'Yemek güncellenirken hata oluştu');
                }
            } catch (err) {
                console.error('Yemek güncelleme hatası:', err);
                alert('Yemek güncellenirken bir hata oluştu.');
            }
        });

        // Cancel New Menu Item Modal
        document.getElementById('cancelNewMenuItem').addEventListener('click', () => {
            document.getElementById('newMenuItemModal').classList.add('hidden');
            document.getElementById('newMenuItemForm').reset();
            document.querySelectorAll('#newMenuItemForm p[data-error]').forEach(p => p.classList.add('hidden'));
        });

        // Cancel Edit Modal
        document.getElementById('cancelEditMenuItem').addEventListener('click', () => {
            document.getElementById('editMenuItemModal').classList.add('hidden');
            document.getElementById('editMenuItemForm').reset();
            document.querySelectorAll('#editMenuItemForm p[data-error]').forEach(p => p.classList.add('hidden'));
        });

        // Search and Filter
        document.getElementById('searchBtn').addEventListener('click', () => {
            currentPage = 1;
            loadMeals(currentPage, document.getElementById('restaurantFilter').value, document.getElementById('searchInput').value);
        });

        document.getElementById('restaurantFilter').addEventListener('change', () => {
            currentPage = 1;
            loadMeals(currentPage, document.getElementById('restaurantFilter').value, document.getElementById('searchInput').value);
        });

        // Pagination
        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                loadMeals(
                    currentPage,
                    document.getElementById('restaurantFilter').value,
                    document.getElementById('searchInput').value
                );
            }
        });

        document.getElementById('nextPage').addEventListener('click', () => {
            currentPage++;
            loadMeals(
                currentPage,
                document.getElementById('restaurantFilter').value,
                document.getElementById('searchInput').value
            );
        });

        // Initial Load
        document.addEventListener('DOMContentLoaded', () => {
            loadRestaurantsForFilter();
            loadMeals();
        });
    </script>
</body>

</html>