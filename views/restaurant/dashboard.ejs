<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="icon" href="/ituyemek_logo.png" type="image/png">
    <title>Ana Sayfa - Restoran Paneli</title>
    <style>
        :root {
            --bg-color: #f5f9ff;
            --text-color: #333;
            --sidebar-bg: linear-gradient(180deg, #1e3a8a, #3b82f6);
            --sidebar-text: #fff;
            --card-bg: #fff;
            --card-border: #dbeafe;
            --table-header-bg: #eff6ff;
            --table-border: #e5e7eb;
            --secondary-text: #64748b;
            --button-bg: #3b82f6;
            --button-hover: #2563eb;
            --status-hazir: #22c55e;
            --status-hazirlanıyor: #f97316;
            --status-iptal: #ef4444;
            --status-on-the-way: #f59e0b;
            --status-pending: #f97316;
            --status-bilinmeyen: #6b7280;
            --rating-color: #f59e0b;
            --shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            --modal-bg: rgba(0, 0, 0, 0.6);
            --border-radius: 8px;
            --transition: all 0.3s ease;
        }

        .dark-theme {
            --bg-color: #1a202c;
            --text-color: #a3bffa;
            --sidebar-bg: linear-gradient(180deg, #1e3a8a, #2a4365);
            --sidebar-text: #e2e8f0;
            --card-bg: #2d3748;
            --card-border: #4a5568;
            --table-header-bg: #2d3748;
            --table-border: #4a5568;
            --secondary-text: #a0aec0;
            --button-bg: #4fd1c5;
            --button-hover: #38b2ac;
            --status-hazir: #48bb78;
            --status-hazirlanıyor: #f6ad55;
            --status-iptal: #e53e3e;
            --status-on-the-way: #ecc94b;
            --status-pending: #f6ad55;
            --status-bilinmeyen: #6b7280;
            --rating-color: #ecc94b;
            --shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            --modal-bg: rgba(0, 0, 0, 0.8);
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background-color: var(--bg-color);
            margin: 0;
            padding: 0;
            display: flex;
            min-height: 100vh;
            color: var(--text-color);
            transition: var(--transition);
        }

        .notification.success {
            border-left: 4px solid var(--status-hazir);
        }

        .notification.error {
            border-left: 4px solid var(--status-iptal);
        }

        .notification span {
            color: var(--text-color);
            font-size: 14px;
        }

        .notification .close-btn {
            background: none;
            border: none;
            color: var(--secondary-text);
            cursor: pointer;
            font-size: 16px;
        }

        .hamburger-btn {
            display: none;
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1001;
            background: var(--button-bg);
            color: var(--sidebar-text);
            border: none;
            width: 45px;
            height: 45px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 18px;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        .hamburger-btn:hover {
            background: var(--button-hover);
        }

        .sidebar-overlay {
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--modal-bg);
            z-index: 999;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }

        .sidebar-overlay.active {
            opacity: 1;
            pointer-events: auto;
        }

        .sidebar {
            width: 260px;
            background: var(--sidebar-bg);
            color: var(--sidebar-text);
            padding: 20px 0;
            position: fixed;
            height: 100vh;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            transition: var(--transition);
            overflow-y: auto;
        }

        .sidebar-close-btn {
            display: none;
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            color: var(--sidebar-text);
            font-size: 24px;
            cursor: pointer;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            transition: var(--transition);
        }

        .sidebar-close-btn:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        .sidebar h2 {
            font-size: 22px;
            margin: 20px;
            text-align: center;
            font-weight: 600;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 15px 30px;
            text-decoration: none;
            color: var(--sidebar-text);
            font-size: 16px;
            font-weight: 500;
            transition: var(--transition);
            border-left: 4px solid transparent;
            cursor: pointer;
        }

        .sidebar a:hover,
        .sidebar a.active-link {
            background-color: var(--button-hover);
            border-left-color: var(--sidebar-text);
        }

        .sidebar a i {
            margin-right: 12px;
            font-size: 18px;
        }

        .main-content {
            margin-left: 260px;
            padding: 40px;
            flex-grow: 1;
            background-color: var(--bg-color);
            transition: var(--transition);
            width: calc(100% - 260px);
            box-sizing: border-box;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 20px;
        }

        .page-header h1 {
            font-size: 28px;
            font-weight: 700;
            color: var(--text-color);
            margin: 0;
        }

        .page-header p {
            font-size: 14px;
            color: var(--secondary-text);
            margin: 5px 0 0;
        }

        .header-controls {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .slider-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            margin-top: -22px;
            margin-right: -10px;
        }

        .slider-wrapper {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .slider-label {
            font-size: 14px;
            font-weight: bold;
            color: var(--secondary-text);
            white-space: nowrap;
            line-height: 1;
            margin-left: 17px;
        }

        .slider-label-close {
            font-size: 14px;
            font-weight: 600;
            color: var(--status-iptal);
        }

        .slider-label-open {
            font-size: 14px;
            font-weight: 600;
            color: var(--status-hazir);
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--status-iptal);
            transition: .4s;
            border-radius: 15px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 2px;
            bottom: 2px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked+.slider {
            background-color: var(--status-hazir);
        }

        input:checked+.slider:before {
            transform: translateX(30px);
        }

        .sound-toggle {
            background-color: var(--button-bg);
            color: var(--sidebar-text);
            border: none;
            padding: 8px 16px;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
            height: 30px;
            line-height: 1;
        }

        .sound-toggle:hover {
            background-color: var(--button-hover);
        }

        .sound-toggle i {
            font-size: 18px;
        }

        .theme-toggle {
            background-color: var(--button-bg);
            color: var(--sidebar-text);
            border: none;
            padding: 8px 16px;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
            height: 30px;
            line-height: 1;
        }

        .theme-toggle:hover {
            background-color: var(--button-hover);
        }

        .theme-toggle .sun,
        .theme-toggle .moon {
            font-size: 18px;
            transition: opacity 0.3s;
        }

        .theme-toggle .sun.active,
        .theme-toggle .moon.active {
            opacity: 1;
        }

        .theme-toggle .sun:not(.active),
        .theme-toggle .moon:not(.active) {
            opacity: 0.3;
        }

        .stats-section {
            display: flex;
            gap: 20px;
            margin-bottom: 40px;
            flex-wrap: wrap;
        }

        .stat-card {
            flex: 1;
            min-width: 200px;
            background-color: var(--card-bg);
            padding: 20px;
            border-radius: var(--border-radius);
            text-align: center;
            transition: var(--transition);
            border: 1px solid var(--card-border);
            box-shadow: var(--shadow);
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card h3 {
            font-size: 30px;
            color: var(--text-color);
            margin: 0;
        }

        .stat-card p {
            font-size: 14px;
            color: var(--secondary-text);
            margin: 8px 0 0;
        }

        .popular-item {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .popular-item-name {
            font-size: 18px;
            font-weight: bold;
            color: var(--text-color);
            margin-bottom: 5px;
            text-align: center;
        }

        .popular-item-desc {
            font-size: 14px;
            color: var(--secondary-text);
            text-align: center;
        }

        .orders-section {
            background-color: var(--card-bg);
            padding: 25px;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            margin-bottom: 18px;
        }

        .table-header {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }

        .table-title {
            font-size: 22px;
            color: var(--text-color);
            margin: 0;
            font-weight: 600;
        }

        .orders-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .orders-table tr {
            margin-bottom: 8px;
            display: table-row;
        }

        .orders-table tr:nth-child(odd) {
            background-color: #f7f7f7;
        }

        .dark-theme .orders-table tr:nth-child(odd) {
            background-color: #3a444e;
        }

        .orders-table th,
        .orders-table td {
            padding: 15px;
            text-align: center;
            border-bottom: 1px solid var(--table-border);
            border-right: 1px solid var(--table-border);
        }

        .orders-table th:last-child,
        .orders-table td:last-child {
            border-right: none;
        }

        .orders-table th {
            background-color: var(--table-header-bg);
            color: var(--text-color);
            font-weight: 600;
            text-transform: uppercase;
            font-size: 13px;
        }

        .orders-table td {
            color: var(--text-color);
        }

        .orders-table tr:hover {
            background-color: rgba(59, 130, 246, 0.1);
        }

        .status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 13px;
            color: var(--sidebar-text);
            font-weight: 600;
            text-align: center;
            display: inline-block;
        }

        .status-pending {
            background-color: var(--status-pending);
        }

        .status-preparing {
            background-color: var(--status-hazirlanıyor);
        }

        .status-on_the_way {
            background-color: var(--status-on-the-way);
        }

        .status-delivered {
            background-color: var(--status-hazir);
        }

        .status-cancelled {
            background-color: var(--status-iptal);
        }

        .status-bilinmeyen {
            background-color: var(--status-bilinmeyen);
        }

        .btn-update {
            background-color: var(--button-bg);
            color: var(--sidebar-text);
            border: none;
            padding: 8px 16px;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            font-size: 14px;
            font-weight: 500;
            margin-right: 5px;
        }

        .btn-update:hover {
            background-color: var(--button-hover);
            transform: translateY(-2px);
        }

        .status-btn {
            background-color: var(--button-bg);
            border: none;
            padding: 16px 12px;
            border-radius: 20px;
            font-size: 13px;
            color: var(--sidebar-text);
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            text-align: center;
            width: 100%;
            box-sizing: border-box;
            margin-bottom: 15px;
        }

        .status-btn.pending {
            background-color: var(--status-pending);
        }

        .status-btn.preparing {
            background-color: var(--status-hazirlanıyor);
        }

        .status-btn.on_the_way {
            background-color: var(--status-on-the-way);
        }

        .status-btn.delivered {
            background-color: var(--status-hazir);
        }

        .status-btn.cancelled {
            background-color: var(--status-iptal);
        }

        .status-btn:hover {
            opacity: 0.9;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: var(--modal-bg);
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background-color: var(--card-bg);
            margin: auto;
            padding: 30px;
            border: 1px solid var(--card-border);
            border-radius: var(--border-radius);
            width: 80%;
            max-width: 500px;
            box-shadow: var(--shadow);
            position: relative;
            animation: fadeIn 0.3s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal-content h3 {
            color: var(--text-color);
            margin-top: 0;
            margin-bottom: 20px;
            font-size: 24px;
            text-align: center;
        }

        .modal-content p {
            color: var(--text-color);
            font-size: 16px;
            margin: 0 0 20px;
        }

        .modal-close-btn {
            color: var(--secondary-text);
            position: absolute;
            top: 15px;
            right: 20px;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            transition: var(--transition);
        }

        .modal-close-btn:hover {
            color: var(--text-color);
        }

        .status-options {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .notification-container {
            position: fixed;
            top: 20px;
            right: 20px;
            width: 300px;
            z-index: 1000;
        }

        .notification {
            background-color: var(--card-bg);
            border: 1px solid var(--card-border);
            padding: 10px 15px;
            margin-bottom: 10px;
            border-radius: var(--border-radius);
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: var(--shadow);
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @media (max-width: 1024px) {
            .sidebar {
                width: 220px;
            }

            .main-content {
                margin-left: 220px;
                padding: 30px;
                width: calc(100% - 220px);
            }

            .page-header h1 {
                font-size: 24px;
            }

            .table-title {
                font-size: 20px;
            }

            .stats-section {
                gap: 15px;
            }

            .stat-card {
                min-width: 180px;
            }

            .header-controls {
                gap: 15px;
            }

            .slider-container {
                margin-top: -18px;
                margin-right: -5px;
            }
        }

        @media (max-width: 768px) {
            .hamburger-btn {
                display: block;
            }

            .sidebar {
                transform: translateX(-100%);
                width: 280px;
                max-width: 80vw;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .sidebar-close-btn {
                display: block;
            }

            .sidebar h2 {
                margin: 50px 20px 20px 20px;
                font-size: 20px;
            }

            .sidebar a {
                padding: 12px 25px;
                font-size: 15px;
            }

            .main-content {
                margin-left: 0;
                padding: 80px 20px 20px 20px;
                width: 100%;
            }

            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .page-header h1 {
                font-size: 22px;
            }

            .header-controls {
                width: 100%;
                justify-content: space-between;
                flex-wrap: wrap;
            }

            .slider-container {
                margin-top: 0;
                margin-right: 0;
                order: 1;
            }

            .theme-toggle {
                order: 2;
            }

            .sound-toggle {
                order: 3;
            }

            .stats-section {
                flex-direction: column;
                gap: 10px;
            }

            .stat-card {
                min-width: 100%;
            }

            .orders-table {
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            .orders-table thead {
                display: none;
            }

            .orders-table tr {
                display: block;
                margin-bottom: 15px;
                border: 1px solid var(--table-border);
                border-radius: var(--border-radius);
                padding: 10px;
            }

            .orders-table td {
                display: flex;
                justify-content: space-between;
                border-bottom: none;
                padding: 8px 10px;
            }

            .orders-table td::before {
                content: attr(data-property);
                font-weight: 600;
                color: var(--secondary-text);
                margin-right: 10px;
                flex: 0 0 40%;
            }

            .modal-content {
                width: 90%;
                padding: 20px;
            }

            .status-options {
                gap: 8px;
            }

            .status-btn {
                padding: 12px;
                font-size: 12px;
            }

            .notification-container {
                width: calc(100% - 40px);
                left: 20px;
                right: 20px;
            }
        }

        @media (max-width: 480px) {
            .hamburger-btn {
                width: 40px;
                height: 40px;
                font-size: 16px;
                top: 15px;
                left: 15px;
            }

            .sidebar {
                width: 260px;
                max-width: 85vw;
            }

            .sidebar h2 {
                font-size: 18px;
                margin: 45px 15px 15px 15px;
            }

            .sidebar a {
                padding: 10px 20px;
                font-size: 14px;
            }

            .main-content {
                padding: 70px 15px 15px 15px;
            }

            .page-header h1 {
                font-size: 20px;
            }

            .table-title {
                font-size: 18px;
            }

            .stat-card h3 {
                font-size: 24px;
            }

            .stat-card p {
                font-size: 12px;
            }

            .btn-update {
                padding: 6px 12px;
                font-size: 12px;
            }

            .notification-container {
                top: 15px;
                left: 15px;
                right: 15px;
                width: calc(100% - 30px);
            }

            .notification {
                padding: 8px 12px;
                font-size: 13px;
            }

            .modal-content h3 {
                font-size: 20px;
            }

            .modal-content {
                padding: 15px;
            }

            .slider-container {
                gap: 6px;
            }

            .slider-label,
            .slider-label-close,
            .slider-label-open {
                font-size: 12px;
            }

            .switch {
                width: 50px;
                height: 26px;
            }

            .slider:before {
                height: 22px;
                width: 22px;
                left: 2px;
                bottom: 2px;
            }

            input:checked+.slider:before {
                transform: translateX(26px);
            }

            .sound-toggle,
            .theme-toggle {
                padding: 8px 16px;
                height: 30px;
                line-height: 1;
            }
        }
    </style>
</head>



<body>

    <button class="hamburger-btn" onclick="toggleSidebar()">
        <i class="fas fa-bars"></i>
    </button>
    <div class="sidebar-overlay" onclick="toggleSidebar()"></div>

    <div class="sidebar" id="sidebar">
        <button class="sidebar-close-btn" onclick="toggleSidebar()">×</button>
        <h2>
            <%= restaurant?.name || "Restoran Adı" %>
        </h2>
        <a href="/restaurant/dashboard" class="menu-item active-link">
            <i class="fas fa-home"></i> Ana Sayfa
        </a>
        <a href="/restaurant/rest_orders" class="menu-item">
            <i class="fas fa-clipboard-list"></i> Tüm Siparişler
        </a>
        <a href="/restaurant/rest_menu" class="menu-item">
            <i class="fas fa-edit"></i> Menü Yönetimi
        </a>
        <a href="/restaurant/rest_comments" class="menu-item">
            <i class="fas fa-star"></i> Müşteri Yorumları
        </a>
        <a href="/restaurant/rest_reports" class="menu-item">
            <i class="fas fa-chart-bar"></i> Satış Raporları
        </a>
        <a href="/restaurant/rest_info" class="menu-item">
            <i class="fas fa-info-circle"></i> Restoran Bilgileri
        </a>
        <a href="/restaurant/rest_settings" class="menu-item">
            <i class="fas fa-cog"></i> Ayarlar
        </a>
        <a href="#" onclick="logout(); return false;" class="menu-item">
            <i class="fas fa-sign-out-alt"></i> Çıkış Yap
        </a>
    </div>

    <div class="main-content">
        <div class="page-header">
            <div>
                <h1 class="page-title">Restoran Bilgileri</h1>
                <p class="page-subtitle">Restoranınızın bilgilerini görüntüleyin</p>
            </div>
            <div class="header-controls">
                <button class="sound-toggle" onclick="toggleSound()">
                    <i class="fas fa-bell" id="sound-icon"></i>
                </button>
                <div class="slider-container">
                    <span class="slider-label">Restoran</span>
                    <div class="slider-wrapper">
                        <span class="slider-label-close">Kapat</span>
                        <label class="switch">
                            <input type="checkbox" <%=restaurant?.delivery?.case==='open' ? 'checked' : '' %>
                            onclick="toggleRestaurantStatus()">
                            <span class="slider"></span>
                        </label>
                        <span class="slider-label-open">Aç</span>
                    </div>
                </div>
                <button class="theme-toggle">
                    <i class="fas fa-sun sun active"></i>
                    <i class="fas fa-moon moon"></i>
                </button>
            </div>
        </div>

        <div class="stats-section">
            <div class="stat-card">
                <h3 class="stats-number">
                    <%= stats?.totalOrders || 0 %>
                </h3>
                <p class="stats-label">Bugünkü Sipariş</p>
            </div>
            <div class="stat-card">
                <h3 class="stats-number">
                    <%= stats?.dailyRevenue?.toFixed(2) || '0.00' %> TL
                </h3>
                <p class="stats-label">Günlük Ciro</p>
            </div>
            <div class="stat-card">
                <div class="popular">
                    <div class="popular-item-name">
                        <%= popularMeal?.name || 'Veri Yok' %>
                    </div>
                    <div class="popular-item-desc">En Çok Sipariş Edilen 🔥</div>
                </div>
            </div>
        </div>

        <div class="orders-section">
            <div class="table-header">
                <h2 class="table-title">Aktif Siparişler</h2>
                <span
                    style="background-color: rgba(var(--status-hazir-rgb, 34, 197, 94), 0.15); color: var(--status-hazir); font-size: 14px; display: flex; align-items: center; gap: 5px; padding: 6px 12px; border-radius: var(--border-radius);">
                    Siparişler otomatik yenilenmektedir
                    <i class="fas fa-check-circle"></i>
                </span>
            </div>
            <div class="table-container">
                <table class="orders-table">
                    <thead>
                        <tr>
                            <th>Tarih</th>
                            <th>Müşteri</th>
                            <th>Adres</th>
                            <th>Ürünler</th>
                            <th>Tutar</th>
                            <th>Ödeme</th>
                            <th>Not</th>
                            <th>Durum</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (Array.isArray(recentOrders) && recentOrders.length> 0) { %>
                            <% recentOrders.forEach(function(order) { %>
                                <% if (['pending', 'preparing' , 'on_the_way' ].includes(order.status)) { %>
                                    <tr>
                                        <td data-property="Sipariş Tarihi">
                                            <% const date=new Date(order.createdAt); const
                                                formattedDate=date.toLocaleString('tr-TR', { day: '2-digit' ,
                                                month: 'long' , year: 'numeric' , hour: '2-digit' , minute: '2-digit'
                                                }); %>
                                                <%= formattedDate %>
                                        </td>
                                        <td data-property="Müşteri">
                                            <% if (order.userId) { %>
                                                <%= order.userId.firstName || '' %>
                                                    <%= order.userId.lastName || '' %>
                                                        <% if (order.userId.phone) { %>
                                                            <br><small
                                                                style="color: var(--primary-text); font-weight: bold;">
                                                                <%= order.userId.phone %>
                                                            </small>
                                                            <% } %>
                                                                <% } else { %>
                                                                    Bilinmeyen Kullanıcı
                                                                    <% } %>
                                        </td>
                                        <td data-property="Adres">
                                            <%= order.deliveryAddressDetails?.formatted_address || 'Adres Yok' %>
                                        </td>
                                        <td data-property="Ürünler">
                                            <% if (order.items && Array.isArray(order.items)) { %>
                                                <%= order.items.map(function(item) { const itemName=item.name ||
                                                    (item.mealId && item.mealId.name) || 'Bilinmeyen Ürün' ; const
                                                    qty=item.quantity || 1; return `${itemName} (${qty}x)`; }).join(', ') %>
                                            <% } else { %>
                                                Veri Yok
                                            <% } %>
                                        </td>
                                        <td data-property="Tutar">
                                            <%= order.totalPrice ? order.totalPrice.toFixed(2) : ' 0.00' %> TL
                                        </td>
                                        <td data-property="Ödeme">
                                            <% const paymentMethods={ 'credit_card' : 'Kredi Kartı' , 'cash' : 'Nakit'
                                                , 'online_payment' : 'Online Ödeme' , 'wallet' : 'Cüzdan' }; %>
                                                <% const paymentMethod=order.paymentMethod || 'bilinmeyen' ; %>
                                                    <%= paymentMethods[paymentMethod] || 'Bilinmeyen' %>
                                        </td>
                                        <td data-property="Not">
                                            <%= order.note || 'Not bulunmamaktadır.' %>
                                        </td>
                                        <td data-property="Durum">
                                            <span class="status status-<%= order.status || 'bilinmeyen' %>">
                                                <%= order.status==='pending' ? 'Beklemede' : order.status==='preparing'
                                                    ? 'Hazırlanıyor' : order.status==='on_the_way' ? 'Yolda'
                                                    : 'Bilinmeyen' %>
                                            </span>
                                        </td>
                                        <td data-property="İşlemler">
                                            <button type="button" class="btn-update"
                                                onclick="openModal('<%= order._id %>')">
                                                Güncelle
                                            </button>
                                        </td>
                                    </tr>
                                    <% } %>
                                        <% }); %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="9" class="empty-state">Aktif sipariş bulunmamaktadır.
                                                    </td>
                                                </tr>
                                                <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="modal" id="modal">
        <div class="modal-content">
            <span class="modal-close-btn" onclick="closeModal()">×</span>
            <h3>Durumu Güncelle</h3>
            <div class="status-options">
                <form id="status-form" action="" method="POST">
                    <button type="submit" class="status-btn delivered" name="status" value="delivered">Teslim</button>
                    <button type="submit" class="status-btn on_the_way" name="status" value="on_the_way">Yolda</button>
                    <button type="submit" class="status-btn preparing" name="status"
                        value="preparing">Hazırlanıyor</button>
                    <button type="submit" class="status-btn cancelled" name="status" value="cancelled">İptal</button>
                </form>
            </div>
        </div>
    </div>

    <div class="notification-container"></div>

    <audio id="notification-sound" preload="auto">
        <source src="/uploads/notification.wav" type="audio/wav">
        <source src="https://www.soundjay.com/buttons/beep-01a.mp3" type="audio/mpeg">
        Ses oynatma desteklenmiyor.
    </audio>


    <script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io();
    const restaurantId = '<%= restaurantId %>';
    console.log('Restaurant ID:', restaurantId);
    if (!restaurantId) {
        console.error('Hata: restaurantId tanımlı değil!');
    }
    socket.emit('joinRestaurant', restaurantId);
    console.log('joinRestaurant olayı gönderildi:', restaurantId);
    socket.on('connect', () => {
        console.log('Socket.IO bağlantısı başarılı, socket ID:', socket.id);
    });
    socket.on('connect_error', (error) => {
        console.error('Socket.IO bağlantı hatası:', error);
    });

    // Cookie management functions
    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);
        document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
        console.log(`Cookie set: ${name}=${value}`);
    }

    function getCookie(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i].trim();
            if (c.indexOf(nameEQ) === 0) {
                const value = c.substring(nameEQ.length, c.length);
                console.log(`Cookie found: ${name}=${value}`);
                return value;
            }
        }
        console.log(`Cookie not found: ${name}`);
        return null;
    }

    // Initialize sound state from cookie
    let isSoundEnabled = getCookie('soundEnabled') === 'true';
    console.log('Initial soundEnabled:', isSoundEnabled);

    // Track user interaction
    let hasInteracted = false;
    document.addEventListener('click', () => {
        hasInteracted = true;
        console.log('User interacted with the page');
        // Preload audio
        const audio = new Audio('/uploads/notification.wav');
        audio.load();
        console.log('Audio preloaded');
        const audioElement = document.getElementById('notification-sound');
        if (audioElement) {
            audioElement.load();
            console.log('Audio element preloaded');
        }
    }, { once: true });

function playNotificationSound() {
    if (!isSoundEnabled) {
        console.log('Bildirim sesi kapalı, ses çalınmadı');
        return;
    }
    if (!hasInteracted) {
        console.warn('Kullanıcı etkileşimi yok, ses tarayıcı tarafından engellenebilir');
        showNotification('Bildirim sesi için lütfen sayfayla etkileşime geçin.', 'error');
        return;
    }
    const audioElement = document.getElementById('notification-sound');
    if (audioElement) {
        audioElement.currentTime = 0; // Sesin başa sarılmasını sağla
        audioElement.play()
            .then(() => {
                console.log('Bildirim sesi başarıyla çalındı');
            })
            .catch(error => {
                console.error('Ses çalma hatası:', error.message);
                showNotification(`Bildirim sesi çalınamadı: ${error.message}`, 'error');
            });
    } else {
        console.error('Ses elementi bulunamadı');
        showNotification('Ses elementi bulunamadı.', 'error');
    }
}


socket.on('newOrder', (order) => {
    console.log('Yeni sipariş alındı:', order);
    if (order.status === 'pending') {
        playNotificationSound();
        showNotification('Yeni sipariş alındı!', 'success');
        setTimeout(() => {
            window.location.reload();
        }, 2000); // 2 saniye gecikme
    } else {
        console.log('Sipariş durumu pending değil, bildirim çalınmadı:', order.status);
        window.location.reload();
    }
});
    // Handle order status updates (no sound or notification)
    socket.on('orderStatusUpdated', (order) => {
        console.log('Sipariş durumu güncellendi:', order);
        window.location.reload();
    });

    function toggleSidebar() {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.querySelector('.sidebar-overlay');
        sidebar.classList.toggle('open');
        overlay.classList.toggle('active');
    }

    function showNotification(message, type = 'success') {
        const container = document.querySelector('.notification-container');
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `<span>${message}</span><button class="close-btn"><i class="fas fa-times"></i></button>`;
        container.appendChild(notification);
        notification.querySelector('.close-btn').onclick = () => {
            notification.style.display = 'none';
            notification.remove();
        };
        setTimeout(() => {
            notification.style.display = 'none';
            notification.remove();
        }, 3000);
    }

    function openModal(orderId) {
        const modal = document.getElementById('modal');
        const form = document.getElementById('status-form');
        form.action = `/restaurant/update-order-status/${orderId}?redirect=dashboard`;
        modal.style.display = 'flex';
    }

    function closeModal() {
        const modal = document.getElementById('modal');
        modal.style.display = 'none';
    }

    function toggleSound() {
        isSoundEnabled = !isSoundEnabled;
        setCookie('soundEnabled', isSoundEnabled, 30);
        const soundIcon = document.getElementById('sound-icon');
        soundIcon.className = `fas fa-bell${isSoundEnabled ? '' : '-slash'}`;
        showNotification(`Bildirim sesi ${isSoundEnabled ? 'açıldı' : 'kapatıldı'}.`, 'success');
        console.log('Sound toggled, new state:', isSoundEnabled);
    }

    window.onclick = function (event) {
        const modal = document.getElementById('modal');
        const sidebar = document.getElementById('sidebar');
        const toggle = document.querySelector('.hamburger-btn');
        const overlay = document.querySelector('.sidebar-overlay');
        if (event.target === modal) {
            closeModal();
        }
        if (!sidebar.contains(event.target) && !toggle.contains(event.target) && sidebar.classList.contains('open')) {
            toggleSidebar();
        }
    };

    document.addEventListener('DOMContentLoaded', function () {
        const themeToggle = document.querySelector('.theme-toggle');
        const sunIcon = document.querySelector('.sun');
        const moonIcon = document.querySelector('.moon');
        const soundIcon = document.getElementById('sound-icon');
        soundIcon.className = `fas fa-bell${isSoundEnabled ? '' : '-slash'}`;
        themeToggle.addEventListener('click', function () {
            document.body.classList.toggle('dark-theme');
            sunIcon.classList.toggle('active');
            moonIcon.classList.toggle('active');
            localStorage.setItem('theme', document.body.classList.contains('dark-theme') ? 'dark' : 'light');
        });
        if (localStorage.getItem('theme') === 'dark') {
            document.body.classList.add('dark-theme');
            sunIcon.classList.remove('active');
            moonIcon.classList.add('active');
        }
    });

    async function logout() {
        try {
            const response = await fetch('/restaurant/logout', {
                method: 'POST',
                credentials: 'include'
            });
            if (response.redirected || response.status === 301 || response.status === 302) {
                console.log('Redirecting to:', response.url);
                showNotification('Oturum doğrulaması başarısız. Lütfen tekrar giriş yap.');
                window.location.href = '/account/login';
                return;
            }
            const data = await response.json();
            if (data.success) {
                showNotification(data.message || 'Başarıyla çıkış yapıldı.');
                window.location.href = '/';
            } else {
                showNotification(data.message || 'Çıkış yapılamadı.', 'error');
                console.error('Logout failed:', data.message);
            }
        } catch (error) {
            console.error('Logout error:', error);
            showNotification('Çıkış yapılırken hata oluştu.', 'error');
        }
    }

    async function toggleRestaurantStatus() {
        try {
            const slider = document.querySelector('.switch input');
            const newStatus = slider.checked ? 'open' : 'closed';
            const response = await fetch('/restaurant/toggle-status', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: newStatus }),
                credentials: 'include'
            });
            if (response.ok) {
                showNotification(`Restoran ${newStatus === 'open' ? 'açıldı' : 'kapatıldı'}.`, 'success');
            } else {
                const errorData = await response.json();
                if (errorData?.message === 'Aktif siparişler varken restoran kapatılamaz') {
                    showNotification('Aktif siparişler varken restoran kapatılamaz.', 'error');
                } else {
                    showNotification('Restoran durumu değiştirilemedi.', 'error');
                }
                slider.checked = !slider.checked;
            }
        } catch (error) {
            console.error('Bağlantı hatası:', error);
            showNotification('Restoran durumu değiştirilemedi.', 'error');
            document.querySelector('.switch input').checked = !document.querySelector('.switch input').checked;
        }
    }
</script>


</body>



</html>