<!DOCTYPE html>
<html lang="tr" class="h-full">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ödeme Sayfası - eduyemek</title>

    <link rel="preconnect" href="https://cdn.tailwindcss.com">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://cdnjs.cloudflare.com">
    <link rel="preconnect" href="https://maps.googleapis.com">

    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="/ituyemek_logo.png" type="image/png">

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet"
        integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Socket.IO client library -->
    <script src="/socket.io/socket.io.js"></script>

    <style>
        body {
            font-family: 'Inter', sans-serif;
            margin: 0;
            overflow-x: hidden;
            /* Prevent horizontal scrolling */
            overflow-y: auto;
            /* Allow vertical scrolling */
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            border: 1px solid rgba(209, 213, 219, 0.3);
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
            backdrop-filter: blur(2px);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #f43f5e, #fb923c);
            border-radius: 8px;
            color: #fff;
            font-weight: 600;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(244, 63, 94, 0.3);
        }

        .notification {
            position: fixed;
            top: 1rem;
            right: 1rem;
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            color: #fff;
            font-weight: 500;
            transform: translateX(110%);
            transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            z-index: 9999;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .notification.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        textarea:focus,
        input[type="radio"]:focus,
        .payment-method-card:has(input[name="paymentMethod"]:checked) {
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
            outline: none;
        }

        .payment-method-card {
            border: 2px solid transparent;
            transition: all 0.2s ease;
        }

        .payment-method-card:has(input[name="paymentMethod"]:checked) {
            background-color: rgba(99, 102, 241, 0.05);
        }

        /* Loading screen styles */
        #loading-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            opacity: 1;
            transition: opacity 0.5s ease;
        }

        #loading-screen.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(99, 102, 241, 0.3);
            border-top: 5px solid #6366f1;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        /* Main content styles */
        #main-content {
            opacity: 0;
            transition: opacity 0.5s ease;
            min-height: 100vh;
            /* Ensure content takes full height */
            overflow-y: auto;
            /* Allow scrolling */
            scrollbar-width: auto;
            /* Enable scrollbar */
            scrollbar-color: #6366f1 #e5e7eb;
            /* Scrollbar thumb and track colors */
        }

        #main-content.loaded {
            opacity: 1;
        }

        /* Custom scrollbar for Webkit browsers (mobile and desktop) */
        #main-content::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        #main-content::-webkit-scrollbar-track {
            background: #e5e7eb;
            border-radius: 4px;
        }

        #main-content::-webkit-scrollbar-thumb {
            background: #6366f1;
            border-radius: 4px;
        }

        #main-content::-webkit-scrollbar-thumb:hover {
            background: #4f46e5;
        }

        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }

            .left,
            .right {
                width: 100%;
            }

            .notification {
                top: 0.5rem;
                right: 0.5rem;
                left: 0.5rem;
                width: auto;
            }

            /* Ensure scrolling on mobile */
            body,
            #main-content {
                overflow-y: auto;
                height: auto;
                min-height: 100vh;
            }

            .glass-card {
                margin-bottom: 1rem;
            }

            /* Ensure map image is responsive */
            .left .glass-card .bg-gray-100 {
                height: 200px;
                /* Fixed height for map on mobile */
            }

            .left .glass-card img {
                object-fit: cover;
                height: 100%;
                width: 100%;
            }
        }

        @media (prefers-color-scheme: dark) {

            body,
            #main-content {
                background: #1a1a1a !important;
                color: #ffffff !important;
            }

            .bg-gradient-to-br {
                background: linear-gradient(135deg, #2d2d2d, #1a1a1a) !important;
            }

            .glass-card {
                background: rgba(30, 30, 30, 0.95) !important;
                border: 1px solid rgba(255, 255, 255, 0.1) !important;
                color: #ffffff !important;
            }

            header {
                background: #1a1a1a !important;
                color: #ffffff !important;
            }

            .header-logo {
                color: #ffffff !important;
            }

            .text-gray-800 {
                color: #ffffff !important;
            }

            .text-gray-700 {
                color: #cccccc !important;
            }

            .text-gray-600 {
                color: #999999 !important;
            }

            .text-gray-500 {
                color: #666666 !important;
            }

            .text-gray-900 {
                color: #ffffff !important;
            }

            .text-green-700 {
                color: #22c55e !important;
            }

            .text-red-600 {
                color: #ef4444 !important;
            }

            .payment-method-card {
                background: #2d2d2d !important;
                border: 1px solid #404040 !important;
                color: #ffffff !important;
            }

            .payment-method-card:hover {
                background: #404040 !important;
            }

            .payment-method-card:has(input[name="paymentMethod"]:checked) {
                background: rgba(99, 102, 241, 0.1) !important;
                border-color: #6366f1 !important;
            }

            textarea,
            input {
                background: #2d2d2d !important;
                color: #ffffff !important;
                border-color: #404040 !important;
            }

            textarea::placeholder,
            input::placeholder {
                color: #999999 !important;
            }

            .bg-gray-100 {
                background: #2d2d2d !important;
            }

            .bg-white {
                background: #2d2d2d !important;
            }

            .border-gray-200 {
                border-color: #404040 !important;
            }

            .text-sm {
                color: #cccccc !important;
            }

            .notification {
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3) !important;
            }

            .notification.success {
                background: linear-gradient(135deg, #10b981, #059669) !important;
            }

            .notification.error {
                background: linear-gradient(135deg, #ef4444, #dc2626) !important;
            }

            footer {
                background: #1a1a1a !important;
                color: #ffffff !important;
            }

            .spinner {
                border-color: rgba(99, 102, 241, 0.3) !important;
                border-top-color: #6366f1 !important;
            }

            #loading-screen {
                background: #1a1a1a !important;
            }

            /* Ödeme yöntemi ikonları */
            .fa-money-bill-wave {
                color: #22c55e !important;
            }

            .fa-credit-card {
                color: #3b82f6 !important;
            }

            .fa-laptop-code {
                color: #666666 !important;
            }

            /* Scrollbar özelleştirme */
            #main-content::-webkit-scrollbar-track {
                background: #2d2d2d !important;
            }

            #main-content::-webkit-scrollbar-thumb {
                background: #6366f1 !important;
            }

            #main-content::-webkit-scrollbar-thumb:hover {
                background: #4f46e5 !important;
            }
        }
    </style>
</head>

<body>
    <!-- Loading Screen -->
    <div id="loading-screen">
        <div class="spinner"></div>
    </div>

    <!-- Main Content -->
    <div id="main-content"
        class="bg-gradient-to-br from-indigo-50 to-purple-100 font-sans min-h-screen text-gray-900 flex flex-col">
        <header class="glass-card shadow-lg sticky top-0 z-40 transform transition-all duration-300">
            <div class="max-w-7xl mx-auto px-4 py-3 flex flex-col md:flex-row justify-between items-center gap-2">
                <a href="/user/usermain"
                    class="header-logo text-2xl font-bold text-gray-800 hover:text-indigo-600 transition-all duration-300 flex items-center">
                    <i class="fas fa-utensils mr-2 text-orange-500 animate-pulse-fast"></i>eduyemek
                </a>

                <div class="text-sm text-gray-700 flex items-center gap-3 mt-2 md:mt-0">
                    <span class="flex items-center gap-1 font-semibold text-green-700">
                        <i class="fas fa-shield-alt"></i> Güvenli Ödeme
                    </span>
                    <span class="hidden sm:inline-block border-l border-gray-300 h-4"></span>
                    <span class="hidden sm:flex items-center gap-1 text-xs text-gray-500 italic">
                        <i class="fas fa-lock"></i> SSL 256-bit şifreleme
                    </span>
                    <img src="/Uploads/secure.png" alt="SSL Secure" class="w-[80px] h-auto object-contain ml-2"
                        loading="lazy">
                </div>
            </div>
        </header>

        <main class="max-w-7xl mx-auto p-4 flex-grow relative z-10 w-full">
            <div class="container flex flex-wrap -mx-2">
                <div class="left w-full md:w-1/2 px-2 mb-4 md:mb-0">
                    <div class="glass-card p-4 h-full flex flex-col">
                        <h2 class="text-lg font-bold text-gray-800 mb-2 flex items-center gap-2">
                            <i class="fas fa-map-marker-alt text-indigo-500"></i> Adres
                        </h2>
                        <% if (address) { %>
                            <div class="mb-3 text-sm text-gray-600">
                                <p class="font-semibold">
                                    <%= address.title %>
                                </p>
                                <p>
                                    <%= address.formatted_address %>
                                </p>
                                <p>
                                    <%= user.phone || 'Telefon yok' %>
                                </p>
                            </div>
                            <% } else { %>
                                <div
                                    class="bg-red-50 border border-red-200 text-red-700 p-2 rounded-lg flex gap-2 mb-3">
                                    <i class="fas fa-exclamation-triangle"></i> Adres ekleyin.
                                </div>
                                <% } %>
                                    <div class="flex-grow bg-gray-100 rounded-lg overflow-hidden">
                                        <% if (address && address.coordinates && address.coordinates.lat &&
                                            address.coordinates.lng) { %>
                                            <img src="https://maps.googleapis.com/maps/api/staticmap?center=<%= address.coordinates.lat %>,<%= address.coordinates.lng %>&zoom=15&size=600x300&markers=color:red%7C<%= address.coordinates.lat %>,<%= address.coordinates.lng %>&key=AIzaSyA6KKwQyX0F18BxRGJ-wuwok_xpAo5ZyRU"
                                                alt="Adres Haritası" class="w-full h-full object-cover" id="map-image"
                                                loading="lazy" decoding="async">
                                            <% } else { %>
                                                <p class="text-center p-3 text-gray-400">Harita yok.</p>
                                                <% } %>
                                    </div>
                    </div>
                </div>
                <div class="right w-full md:w-1/2 px-2">
                    <div class="glass-card p-4 h-full flex flex-col">
                        <h2 class="text-lg font-bold text-gray-800 mb-2 flex items-center gap-2">
                            <i class="fas fa-shopping-basket text-orange-500"></i> Sipariş
                        </h2>
                        <div class="space-y-2 text-sm text-gray-600">
                            <% if (order.items && order.items.length) { %>
                                <% order.items.forEach(item=> { %>
                                    <div class="flex justify-between">
                                        <span>
                                            <%= item.name %> x<%= item.quantity %>
                                        </span>
                                        <span class="font-semibold">
                                            <%= item.totalPrice %> TL
                                        </span>
                                    </div>
                                    <% }) %>
                                        <% } else { %>
                                            <p class="text-red-600">Sepet boş.</p>
                                            <% } %>
                                                <div class="border-t border-gray-200 pt-2 mt-2">
                                                    <p class="flex justify-between">
                                                        <span>Ara Toplam:</span>
                                                        <span class="font-semibold">
                                                            <%= order.subtotal %> TL
                                                        </span>
                                                    </p>
                                                    <p class="flex justify-between text-base font-bold text-gray-900">
                                                        <span>Toplam:</span>
                                                        <span>
                                                            <%= order.total %> TL
                                                        </span>
                                                    </p>
                                                </div>
                        </div>

                        <h2 class="text-lg font-bold text-gray-800 mb-2 mt-3 flex items-center gap-2">
                            <i class="fas fa-wallet text-green-500"></i> Ödeme
                        </h2>
                        <div class="space-y-2">
                            <label class="payment-method-card flex p-2 rounded-lg cursor-pointer bg-white shadow hover:shadow-md

">
                                <input type="radio" name="paymentMethod" value="cash"
                                    class="form-radio h-4 w-4 text-indigo-600" checked>
                                <span class="ml-2 flex-grow text-sm font-semibold text-gray-800">Kapıda Nakit</span>
                                <i class="fas fa-money-bill-wave text-green-500"></i>
                            </label>
                            <label
                                class="payment-method-card flex p-2 rounded-lg cursor-pointer bg-white shadow hover:shadow-md">
                                <input type="radio" name="paymentMethod" value="credit_card"
                                    class="form-radio h-4 w-4 text-indigo-600">
                                <span class="ml-2 flex-grow text-sm font-semibold text-gray-800">Kapıda Kart</span>
                                <i class="fas fa-credit-card text-blue-500"></i>
                            </label>
                            <label
                                class="payment-method-card flex p-2 rounded-lg cursor-not-allowed bg-white shadow opacity-70">
                                <input type="radio" name="paymentMethod" value="online_payment"
                                    class="form-radio h-4 w-4 text-indigo-600" disabled>
                                <span class="ml-2 flex-grow text-sm font-semibold text-gray-500">Online Ödeme
                                    (Yakında)</span>
                                <i class="fas fa-laptop-code text-gray-400"></i>
                            </label>
                        </div>

                        <h2 class="text-lg font-bold text-gray-800 mb-2 mt-3 flex items-center gap-2">
                            <i class="fas fa-clipboard-list text-purple-500"></i> Not
                        </h2>
                        <textarea id="orderNote" rows="3" maxlength="200"
                            placeholder="Restoran veya kuryeye iletmek istediğiniz notu buraya giriniz.."
                            class="w-full p-2 border border-gray-200 rounded-lg focus:outline-none focus:border-indigo-600 focus:ring-1 focus:ring-indigo-600 text-sm text-gray-600"></textarea>

                        <button id="confirmOrderBtn" class="btn-secondary w-full mt-3 py-2 text-sm">
                            <i class="fas fa-check-circle mr-1"></i> Onayla
                        </button>
                    </div>
                </div>
            </div>
        </main>

        <footer class="glass-card shadow-inner mt-auto py-4 relative z-10">
            <div class="max-w-3xl mx-auto px-2">
                <div class="text-center">

                    <!-- Ortalanmış logo + gap -->
                    <div
                        class="flex justify-center items-center text-base font-bold text-gray-800 hover:text-indigo-600 transition-all duration-300 cursor-pointer mb-2">
                        <i class="fas fa-utensils mr-2 text-orange-500 animate-pulse-fast"></i>
                        eduyemek
                    </div>
                    <div class="text-[10px] text-gray-500">© 2025 eduyemek - Tüm hakları saklıdır.</div>

                </div>
            </div>
        </footer>
    </div>

    <script>
        // Utility function to toggle spinner (used elsewhere in the page)
        function toggleSpinner(show) {
            const spinner = document.getElementById('spinner') || Object.assign(document.createElement('div'), {
                id: 'spinner',
                className: 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50',
                innerHTML: '<div class="w-12 h-12 border-4 border-t-4 border-purple-200 border-t-indigo-600 rounded-full animate-spin"></div>'
            });
            if (!spinner.parentNode) document.body.appendChild(spinner);
            spinner.style.display = show ? 'flex' : 'none';
        }

        // Optimized notification function
        function showNotification(message, type) {
            document.querySelectorAll('.notification').forEach(n => n.remove());
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `<i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} mr-2"></i>${message}`;
            document.body.appendChild(notification);
            requestAnimationFrame(() => {
                notification.classList.add('show');
                setTimeout(() => {
                    notification.classList.remove('show');
                    notification.addEventListener('transitionend', () => notification.remove(), { once: true });
                }, 2500);
            });
        }

        // Loading screen logic
        document.addEventListener('DOMContentLoaded', () => {
            const loadingScreen = document.getElementById('loading-screen');
            const mainContent = document.getElementById('main-content');
            let resourcesLoaded = 0;
            const totalResources = 4; // Tailwind CSS, Font Awesome, Google Fonts, Map Image (if present)

            // Function to check if all resources are loaded
            function checkAllResourcesLoaded() {
                resourcesLoaded++;
                if (resourcesLoaded >= totalResources) {
                    // Hide loading screen and show main content
                    loadingScreen.classList.add('hidden');
                    mainContent.classList.add('loaded');
                    document.body.style.overflow = ''; // Restore scrolling
                }
            }

            // Check Tailwind CSS (already loaded via <script>)
            checkAllResourcesLoaded();

            // Check Font Awesome
            const fontAwesomeLink = document.querySelector('link[href*="font-awesome"]');
            if (fontAwesomeLink) {
                fontAwesomeLink.addEventListener('load', checkAllResourcesLoaded);
                fontAwesomeLink.addEventListener('error', checkAllResourcesLoaded); // Handle errors
            } else {
                checkAllResourcesLoaded();
            }

            // Check Google Fonts
            const googleFontsLink = document.querySelector('link[href*="googleapis"]');
            if (googleFontsLink) {
                googleFontsLink.addEventListener('load', checkAllResourcesLoaded);
                googleFontsLink.addEventListener('error', checkAllResourcesLoaded); // Handle errors
            } else {
                checkAllResourcesLoaded();
            }

            // Check Map Image (if present)
            const mapImage = document.getElementById('map-image');
            if (mapImage) {
                mapImage.addEventListener('load', checkAllResourcesLoaded);
                mapImage.addEventListener('error', checkAllResourcesLoaded); // Handle errors
            } else {
                checkAllResourcesLoaded();
            }

            // Fallback: Ensure loading screen hides after 5 seconds in case of issues
            setTimeout(() => {
                if (!loadingScreen.classList.contains('hidden')) {
                    loadingScreen.classList.add('hidden');
                    mainContent.classList.add('loaded');
                    document.body.style.overflow = '';
                }
            }, 5000);
        });

        // Existing event listener for order confirmation
        document.addEventListener('DOMContentLoaded', () => {
            const confirmOrderBtn = document.getElementById('confirmOrderBtn');
            const orderNoteTextarea = document.getElementById('orderNote');

            if (!confirmOrderBtn) return console.error('Confirm button not found!');

            // Socket.IO bağlantısını başlat
            const socket = io();
            const restaurantId = '<%= basket && basket.restaurantId ? basket.restaurantId : "" %>';
            if (restaurantId) {
                socket.emit('joinRestaurant', restaurantId);
                socket.on('restaurantStatusUpdate', function (data) {
                    if (data.restaurantId === restaurantId && data.status === 'closed') {
                        showNotification(data.message, 'error');
                        setTimeout(() => {
                            window.location.href = '/user/usermain';
                        }, 3000);
                    }
                });
                // Yeni: Stok güncelleme olayını dinle
                socket.on('stockUpdate', function (data) {
                    if (data.stock === 0 || data.message.includes('stokta kalmadı')) {
                        showNotification(`${data.name} stokta kalmadı. Anasayfaya yönlendiriliyorsunuz.`, 'error');
                        setTimeout(() => {
                            window.location.href = '/user/usermain';
                        }, 3000);
                    } else if (data.message.includes('yetersiz stok')) {
                        showNotification(`${data.name} için yeterli stok yok. Anasayfaya yönlendiriliyorsunuz.`, 'error');
                        setTimeout(() => {
                            window.location.href = '/user/usermain';
                        }, 3000);
                    }
                });
            }

            confirmOrderBtn.addEventListener('click', async () => {
                const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
                if (!selectedPaymentMethod) return showNotification('Ödeme yöntemi seçin.', 'error');
                if (selectedPaymentMethod.value === 'online_payment') return showNotification('Online ödeme aktif değil.', 'error');

                try {
                    const orderNote = orderNoteTextarea?.value || '';
                    const paymentMethod = selectedPaymentMethod.value;

                    toggleSpinner(true);
                    const res = await fetch('/user/usermain/checkout', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ note: orderNote, paymentMethod })
                    });

                    const data = await res.json();
                    if (!res.ok) throw new Error(`HTTP error: ${res.status}`);
                    if (data.success) {
                        showNotification('Sipariş oluşturuldu!', 'success');
                        setTimeout(() => location.href = '/user/usermain/orders', 1000);
                    } else {
                        showNotification(data.error || 'Sipariş hatası.', 'error');
                    }
                } catch (error) {
                    console.error('Hata:', error);
                    showNotification('Restoran Kapanmış veya Yemek stokta kalmamış olabilir');
                } finally {
                    toggleSpinner(false);
                }
            });
        });

        async function logout() {
            try {
                const response = await fetch('/account/user/usermain/logout', { method: 'POST', credentials: 'include' });
                if (response.ok) location.href = '/';
                else console.error('Çıkış yapılamadı');
            } catch (error) {
                console.error('Bağlantı hatası:', error);
            }
        }
    </script>
</body>

</html>